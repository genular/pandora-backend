###################################################################
####    This is nginx example file for needed virtual hosts    ####
####                                                           #### 
####    Please adjust it to your own system needs              ####
###################################################################

server {
    listen 80;
    server_name dashboard.genular.org;

    # Necessary for Let's Encrypt Domain Name ownership validation
    location /.well-known/acme-challenge/ {
        try_files $uri /dev/null =404;
    }

    location / {
        return 301 https://$server_name$request_uri;
    }
}
## server {
##     listen 443 ssl;
##     server_name dashboard.genular.org;
## 
##     ssl_certificate /etc/letsencrypt/live/dashboard.genular.org/fullchain.pem;
##     ssl_certificate_key /etc/letsencrypt/live/dashboard.genular.org/privkey.pem;
##     ssl_trusted_certificate /etc/letsencrypt/live/dashboard.genular.org/fullchain.pem;
## 
##     ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
##     ssl_ciphers         HIGH:!aNULL:!MD5;
## 
##     ## Development mode with in-build server
##     ## cd /var/www/genular/pandora && yarn run start:web
##     ## location / {
##     ##     proxy_pass https://localhost:8080;
##     ##     proxy_set_header Host $host;
##     ##     proxy_set_header X-Real-IP $remote_addr;
##     ##     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
##     ##     proxy_set_header X-Forwarded-Proto $scheme;
##     ## }
## 
##     ## Production mode with statics in place
##     ## cd /var/www/genular/pandora && yarn run webpack:web:prod
##     root /var/www/genular/pandora/compiled/web;
##     index index.html;
##     charset utf-8;
##     
##     location / {
##         try_files $uri $uri/ =404;
##     }
## 
##     error_log  /var/log/nginx/dashboard.genular.org_error.log warn;
## }

server {
    listen 80;
    server_name analysis.api.genular.org;

    # Necessary for Let's Encrypt Domain Name ownership validation
    location /.well-known/acme-challenge/ {
        try_files $uri /dev/null =404;
    }
    
    location / {
        return 301 https://$server_name$request_uri;
    }
}
## server {
##     listen 443 ssl;
##     server_name analysis.api.genular.org;
##
##     ssl_certificate /etc/letsencrypt/live/analysis.api.genular.org/fullchain.pem;
##     ssl_certificate_key /etc/letsencrypt/live/analysis.api.genular.org/privkey.pem;
##     ssl_trusted_certificate /etc/letsencrypt/live/analysis.api.genular.org/fullchain.pem;
##
##     ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
##     ssl_ciphers         HIGH:!aNULL:!MD5;
##     
##     location / {
##         proxy_http_version  1.1;
##         # Simple requests
##         if ($request_method ~* "(GET|POST)") {
##             add_header "Access-Control-Allow-Origin"  "https://dashboard.genular.org";
##         }
##         # Preflighted requests
##         if ($request_method = OPTIONS ) {
##             add_header "Access-Control-Allow-Origin"  "https://dashboard.genular.org";
##             add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
##             add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Cache-Control, Accept, X-Token";
##             return 200;
##         }
##         proxy_set_header    Host            $host;
##         proxy_set_header    X-Real-IP       $remote_addr;
##         proxy_set_header    X-Forwarded-for $remote_addr;
##         proxy_pass http://127.0.0.1:8181;
##     }
##     error_log  /var/log/nginx/analysis.api.genular.org_error.log warn;
## }

server {
    listen 80;
    server_name general.api.genular.org;

    # Necessary for Let's Encrypt Domain Name ownership validation
    location /.well-known/acme-challenge/ {
        try_files $uri /dev/null =404;
    }
    
    location / {
        return 301 https://$server_name$request_uri;
    }
}

## server {
##     listen 443 ssl;
##     server_name general.api.genular.org;
## 
##     ssl_certificate /etc/letsencrypt/live/general.api.genular.org/fullchain.pem;
##     ssl_certificate_key /etc/letsencrypt/live/general.api.genular.org/privkey.pem;
##     ssl_trusted_certificate /etc/letsencrypt/live/general.api.genular.org/fullchain.pem;
## 
##     ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
##     ssl_ciphers         HIGH:!aNULL:!MD5;
##     
##     location / {
##         proxy_http_version  1.1;
##         # Simple requests
##         if ($request_method ~* "(GET|POST)") {
##             add_header "Access-Control-Allow-Origin" "https://dashboard.genular.org";
##         }
##         # Preflighted requests
##         if ($request_method = OPTIONS ) {
##             add_header "Access-Control-Allow-Origin"  "https://dashboard.genular.org";
##             add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
##             add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Cache-Control, Accept, X-Token";
##             return 200;
##         }
##         proxy_set_header    Host            $host;
##         proxy_set_header    X-Real-IP       $remote_addr;
##         proxy_set_header    X-Forwarded-for $remote_addr;
##         proxy_pass http://127.0.0.1:8183;
##     }
##     error_log  /var/log/nginx/general.api.genular.org_error.log warn;
## }

server {
    listen 80;
    server_name plots.api.genular.org;

    # Necessary for Let's Encrypt Domain Name ownership validation
    location /.well-known/acme-challenge/ {
        try_files $uri /dev/null =404;
    }
    
    location / {
        return 301 https://$server_name$request_uri;
    }
}
## server {
##     listen 443 ssl;
##     server_name plots.api.genular.org;
## 
##     ssl_certificate /etc/letsencrypt/live/plots.api.genular.org/fullchain.pem;
##     ssl_certificate_key /etc/letsencrypt/live/plots.api.genular.org/privkey.pem;
##     ssl_trusted_certificate /etc/letsencrypt/live/plots.api.genular.org/fullchain.pem;
## 
##     ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
##     ssl_ciphers         HIGH:!aNULL:!MD5;
##     
##     location / {
##         proxy_http_version  1.1;
##         # Simple requests
##         if ($request_method ~* "(GET|POST)") {
##             add_header "Access-Control-Allow-Origin" "https://dashboard.genular.org";
##         }
##         # Preflighted requests
##         if ($request_method = OPTIONS ) {
##             add_header "Access-Control-Allow-Origin"  "https://dashboard.genular.org";
##             add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
##             add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Cache-Control, Accept, X-Token";
##             return 200;
##         }
##         proxy_set_header    Host            $host;
##         proxy_set_header    X-Real-IP       $remote_addr;
##         proxy_set_header    X-Forwarded-for $remote_addr;
##         proxy_pass http://127.0.0.1:8184;
##     }
##     error_log  /var/log/nginx/plots.api.genular.org_error.log warn;
## }

server {
    listen 80;
    server_name backend.api.genular.org;

    # Necessary for Let's Encrypt Domain Name ownership validation
    location /.well-known/acme-challenge/ {
        try_files $uri /dev/null =404;
    }
    
    location / {
        return 301 https://$server_name$request_uri;
    }
}
## server {
##     listen 443 ssl;
##     server_name backend.api.genular.org;
## 
##     ssl_certificate /etc/letsencrypt/live/backend.api.genular.org/fullchain.pem;
##     ssl_certificate_key /etc/letsencrypt/live/backend.api.genular.org/privkey.pem;
##     ssl_trusted_certificate /etc/letsencrypt/live/backend.api.genular.org/fullchain.pem;
## 
##     ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
##     ssl_ciphers         HIGH:!aNULL:!MD5;
## 
##     ## Development mode with in-build web server
##     ## cd /var/www/genular/pandora-backend/server/backend && composer start
##     ## localtunnel.me - lt --port 8186 --local-host api.backend.local
##     ## location / {
##     ##     proxy_http_version  1.1;
##     ##     # Simple requests
##     ##     if ($request_method ~* "(GET|POST)") {
##     ##         add_header "Access-Control-Allow-Origin" "https://dashboard.genular.org";
##     ##     }
##     ##     # Preflighted requests
##     ##     if ($request_method = OPTIONS ) {
##     ##         add_header "Access-Control-Allow-Origin"  "https://dashboard.genular.org";
##     ##         add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
##     ##         add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Cache-Control, Accept, X-Token";
##     ##         return 200;
##     ##     }
##     ##     proxy_set_header    Host            $host;
##     ##     proxy_set_header    X-Real-IP       $remote_addr;
##     ##     proxy_set_header    X-Forwarded-for $remote_addr;
##     ##     proxy_pass http://127.0.0.1:8186;
##     ## }
## 
##     ## Production static mode
##     index index.php;
##     root /var/www/genular/pandora-backend/server/backend/public;
## 
##     location / {
##         try_files $uri /index.php$is_args$args;
##     }
## 
##     location ~ \.php {
##         include snippets/fastcgi-php.conf;
## 
##         ## With php-fpm (or other unix sockets):
##         fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
## 
##         ## With php-cgi (or other tcp sockets):
##         # fastcgi_pass 127.0.0.1:9000;
##     }
##     error_log  /var/log/nginx/backend.api.genular.org_error.log warn;
## }
