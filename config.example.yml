# Configuration Template for Application
# This file serves as a template for configuring the application environment. Replace the PLACEHOLDER texts with actual values as described.

default:
  details:
    title: "PLACEHOLDER" # Example: "genular"
    email: "PLACEHOLDER" # Example: "support@genular.com"
  
  # Security settings
  salt: "PLACEHOLDER" # Generate an 8 character random alphanumeric string for encryption purposes (e.g., database, files)
  secret: "PLACEHOLDER" # Generate a 64 character random alphanumeric string for secure communication. Ensure consistency across backend and frontend configurations.
  
  # Email service configuration
  sendgrid_api: "PLACEHOLDER" # Your SendGrid API key for sending emails
  sendgrid_templates:
    register: "PLACEHOLDER" # Template ID for registration emails
  
  # SSH keys for AI analysis cloud servers deployment
  ssh_keys:
    - "PLACEHOLDER" # Your SSH key
  
  # Cloud provider credentials for deploying cloud resources
  cloud_providers:
    hetzner:
      token: "PLACEHOLDER"
      analysis: "PLACEHOLDER"
    chargebee:
      site: "PLACEHOLDER"
      api: "PLACEHOLDER"
  
  # Storage configuration
  storage:
    s3:
      key: "PLACEHOLDER" # Your S3 access key
      secret: "PLACEHOLDER" # Your S3 secret key
      region: "ams3" # S3 region
      endpoint: "digitaloceanspaces.com" # S3 endpoint
      bucket: "PLACEHOLDER" # S3 bucket name
    local:
      data_path: "PLACEHOLDER" # Path to local storage directory, e.g., "/mnt/data"
  
  # Database configuration
  database:
    host: "PLACEHOLDER" # Database host IP
    port: "PLACEHOLDER" # Database port
    user: "PLACEHOLDER" # Database user
    password: "PLACEHOLDER" # Database password
    dbname: "PLACEHOLDER" # Database name
  
  # Federation server configuration (if applicable)
  federation:
    enabled: true
    server_type: "both" # Can be "master", "slave", or "both"
    usage_statistics: true
    endpoint: "https://backend.genular.org" # Federation server endpoint
  
  # Server module configurations
  analysis:
    server:
      debug: TRUE # Enable debugging for analysis server
      url: "PLACEHOLDER_ANALYSIS_URL"
      proxy_host: "127.0.0.1"
      proxy_port: 8181
  
  plots:
    server:
      debug: TRUE # Enable debugging for plots server
      url: "PLACEHOLDER_PLOTS_URL"
      proxy_host: "127.0.0.1"
      proxy_port: 8184
  
  backend:
    server:
      debug: TRUE # Enable debugging for backend server
      url: "PLACEHOLDER_BACKEND_URL"
      proxy_host: "127.0.0.1"
      proxy_port: 8186
  
  analysis_python:
    server:
      debug: TRUE # Enable debugging for Python analysis server
      url: "PLACEHOLDER_PYTHON_URL"
      proxy_host: "127.0.0.1"
      proxy_port: 8187
  
  # Frontend dashboard configuration
  frontend:
    server:
      url: "PLACEHOLDER_FRONTEND_URL" # URL for the frontend dashboard interface
